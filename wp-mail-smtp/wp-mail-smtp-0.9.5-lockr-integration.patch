diff --git a/wp_mail_smtp.php b/wp_mail_smtp.php
index 7d65426..a8861d0 100644
--- a/wp_mail_smtp.php
+++ b/wp_mail_smtp.php
@@ -17,7 +17,7 @@ Author URI: http://www.callum-macdonald.com/
 
 /**
  * Setting options in wp-config.php
- * 
+ *
  * Specifically aimed at WPMU users, you can set the options for this plugin as
  * constants in wp-config.php. This disables the plugin's admin page and may
  * improve performance very slightly. Copy the code below into wp-config.php.
@@ -51,49 +51,79 @@ $wpms_options = array (
 	'smtp_pass' => ''
 );
 
-
 /**
  * Activation function. This function creates the required options and defaults.
  */
 if (!function_exists('wp_mail_smtp_activate')) :
 function wp_mail_smtp_activate() {
-	
+
 	global $wpms_options;
-	
+
 	// Create the required options...
 	foreach ($wpms_options as $name => $val) {
 		add_option($name,$val);
 	}
-	
+
 }
 endif;
 
 if (!function_exists('wp_mail_smtp_whitelist_options')) :
 function wp_mail_smtp_whitelist_options($whitelist_options) {
-	
+
 	global $wpms_options;
-	
+
 	// Add our options to the array
 	$whitelist_options['email'] = array_keys($wpms_options);
-	
+
 	return $whitelist_options;
-	
+
 }
 endif;
 
+/**
+ * Try to import the password to Lockr if it is not already there.
+ */
+include_once( ABSPATH . 'wp-admin/includes/plugin.php' );
+if ( is_plugin_active( 'lockr/lockr.php' ) ) {
+	lockr_override_option( 'smtp_pass', 'lockr_wp_mail_smtp', 'WP Mail SMTP Password' );
+}
+
+/**
+ * Check for password is stored outside the options table, otherwise return the option value.
+ */
+if (!function_exists('wp_mail_smtp_get_password')){
+	function wp_mail_smtp_get_password() {
+
+		$smtp_pass = get_option('smtp_pass');
+		if( substr( $smtp_pass,0,5 ) == 'lockr' ) {
+			$lockr_dir = WP_PLUGIN_DIR . '/lockr';
+			if ( is_dir( $lockr_dir ) ) {
+				include_once( $lockr_dir . '/lockr.php' );
+				$lockr_key = lockr_get_key( $smtp_pass );
+				if( $lockr_key ){
+					$smtp_pass = $lockr_key;
+				}
+			}
+		}
+
+		return $smtp_pass;
+
+	}
+}
+
 // To avoid any (very unlikely) clashes, check if the function alredy exists
 if (!function_exists('phpmailer_init_smtp')) :
 // This code is copied, from wp-includes/pluggable.php as at version 2.2.2
 function phpmailer_init_smtp($phpmailer) {
-	
+
 	// If constants are defined, apply those options
 	if (defined('WPMS_ON') && WPMS_ON) {
-		
+
 		$phpmailer->Mailer = WPMS_MAILER;
-		
+
 		if (WPMS_SET_RETURN_PATH)
 			$phpmailer->Sender = $phpmailer->From;
-		
+
 		if (WPMS_MAILER == 'smtp') {
 			$phpmailer->SMTPSecure = WPMS_SSL;
 			$phpmailer->Host = WPMS_SMTP_HOST;
@@ -104,55 +134,57 @@ function phpmailer_init_smtp($phpmailer) {
 				$phpmailer->Password = WPMS_SMTP_PASS;
 			}
 		}
-		
+
 		// If you're using contstants, set any custom options here
 		$phpmailer = apply_filters('wp_mail_smtp_custom_options', $phpmailer);
-		
+
 	}
 	else {
-		
+
 		// Check that mailer is not blank, and if mailer=smtp, host is not blank
 		if ( ! get_option('mailer') || ( get_option('mailer') == 'smtp' && ! get_option('smtp_host') ) ) {
 			return;
 		}
-		
+
 		// Set the mailer type as per config above, this overrides the already called isMail method
 		$phpmailer->Mailer = get_option('mailer');
-		
+
 		// Set the Sender (return-path) if required
 		if (get_option('mail_set_return_path'))
 			$phpmailer->Sender = $phpmailer->From;
-		
+
 		// Set the SMTPSecure value, if set to none, leave this blank
 		$phpmailer->SMTPSecure = get_option('smtp_ssl') == 'none' ? '' : get_option('smtp_ssl');
-		
+
 		// If we're sending via SMTP, set the host
 		if (get_option('mailer') == "smtp") {
-			
+
 			// Set the SMTPSecure value, if set to none, leave this blank
 			$phpmailer->SMTPSecure = get_option('smtp_ssl') == 'none' ? '' : get_option('smtp_ssl');
-			
+
 			// Set the other options
 			$phpmailer->Host = get_option('smtp_host');
 			$phpmailer->Port = get_option('smtp_port');
-			
+
 			// If we're using smtp auth, set the username & password
 			if (get_option('smtp_auth') == "true") {
+				$smtp_pass = wp_mail_smtp_get_password();
+
 				$phpmailer->SMTPAuth = TRUE;
 				$phpmailer->Username = get_option('smtp_user');
-				$phpmailer->Password = get_option('smtp_pass');
+				$phpmailer->Password = $smtp_pass;
 			}
 		}
-		
+
 		// You can add your own options here, see the phpmailer documentation for more info:
 		// http://phpmailer.sourceforge.net/docs/
 		$phpmailer = apply_filters('wp_mail_smtp_custom_options', $phpmailer);
-		
-		
+
+
 		// STOP adding options here.
-		
+
 	}
-	
+
 } // End of phpmailer_init_smtp() function definition
 endif;
 
@@ -164,11 +196,11 @@ endif;
 if (!function_exists('wp_mail_smtp_options_page')) :
 // Define the function
 function wp_mail_smtp_options_page() {
-	
+
 	// Load the options
 	global $wpms_options, $phpmailer;
-	
-	// Make sure the PHPMailer class has been instantiated 
+
+	// Make sure the PHPMailer class has been instantiated
 	// (copied verbatim from wp-includes/pluggable.php)
 	// (Re)create it, if it's gone missing
 	if ( !is_object( $phpmailer ) || !is_a( $phpmailer, 'PHPMailer' ) ) {
@@ -179,30 +211,30 @@ function wp_mail_smtp_options_page() {
 
 	// Send a test mail if necessary
 	if (isset($_POST['wpms_action']) && $_POST['wpms_action'] == __('Send Test', 'wp_mail_smtp') && is_email($_POST['to'])) {
-		
+
 		check_admin_referer('test-email');
-		
+
 		// Set up the mail variables
 		$to = $_POST['to'];
 		$subject = 'WP Mail SMTP: ' . __('Test mail to ', 'wp_mail_smtp') . $to;
 		$message = __('This is a test email generated by the WP Mail SMTP WordPress plugin.', 'wp_mail_smtp');
-		
+
 		// Set SMTPDebug to true
 		$phpmailer->SMTPDebug = true;
-		
+
 		// Start output buffering to grab smtp debugging output
 		ob_start();
 
 		// Send the test mail
 		$result = wp_mail($to,$subject,$message);
-		
+
 		// Strip out the language strings which confuse users
 		//unset($phpmailer->language);
 		// This property became protected in WP 3.2
-		
+
 		// Grab the smtp debugging output
 		$smtp_debug = ob_get_clean();
-		
+
 		// Output the response
 		?>
 <div id="message" class="updated fade"><p><strong><?php _e('Test Message Sent', 'wp_mail_smtp'); ?></strong></p>
@@ -214,12 +246,12 @@ function wp_mail_smtp_options_page() {
 <pre><?php echo $smtp_debug ?></pre>
 </div>
 		<?php
-		
+
 		// Destroy $phpmailer so it doesn't cause issues later
 		unset($phpmailer);
 
 	}
-	
+
 	?>
 <div class="wrap">
 <h2><?php _e('Advanced Email Options', 'wp_mail_smtp'); ?></h2>
@@ -302,7 +334,7 @@ function wp_mail_smtp_options_page() {
 </tr>
 <tr valign="top">
 <th scope="row"><label for="smtp_pass"><?php _e('Password', 'wp_mail_smtp'); ?></label></th>
-<td><input name="smtp_pass" type="text" id="smtp_pass" value="<?php print(get_option('smtp_pass')); ?>" size="40" class="code" /></td>
+<td><input name="smtp_pass" type="text" id="smtp_pass" value="<?php print(wp_mail_smtp_get_password()); ?>" size="40" class="code" /></td>
 </tr>
 </table>
 
@@ -328,7 +360,7 @@ function wp_mail_smtp_options_page() {
 
 </div>
 	<?php
-	
+
 } // End of wp_mail_smtp_options_page() function definition
 endif;
 
@@ -338,11 +370,11 @@ endif;
  */
 if (!function_exists('wp_mail_smtp_menus')) :
 function wp_mail_smtp_menus() {
-	
+
 	if (function_exists('add_submenu_page')) {
 		add_options_page(__('Advanced Email Options', 'wp_mail_smtp'),__('Email', 'wp_mail_smtp'),'manage_options',__FILE__,'wp_mail_smtp_options_page');
 	}
-	
+
 } // End of wp_mail_smtp_menus() function definition
 endif;
 
@@ -352,10 +384,10 @@ endif;
  */
 if (!function_exists('wp_mail_smtp_mail_from')) :
 function wp_mail_smtp_mail_from ($orig) {
-	
+
 	// This is copied from pluggable.php lines 348-354 as at revision 10150
 	// http://trac.wordpress.org/browser/branches/2.7/wp-includes/pluggable.php#L348
-	
+
 	// Get the site domain and get rid of www.
 	$sitename = strtolower( $_SERVER['SERVER_NAME'] );
 	if ( substr( $sitename, 0, 4 ) == 'www.' ) {
@@ -364,22 +396,22 @@ function wp_mail_smtp_mail_from ($orig) {
 
 	$default_from = 'wordpress@' . $sitename;
 	// End of copied code
-	
+
 	// If the from email is not the default, return it unchanged
 	if ( $orig != $default_from ) {
 		return $orig;
 	}
-	
+
 	if (defined('WPMS_ON') && WPMS_ON) {
 		if (defined('WPMS_MAIL_FROM') && WPMS_MAIL_FROM != false)
 			return WPMS_MAIL_FROM;
 	}
 	elseif (is_email(get_option('mail_from'), false))
 		return get_option('mail_from');
-	
+
 	// If in doubt, return the original value
 	return $orig;
-	
+
 } // End of wp_mail_smtp_mail_from() function definition
 endif;
 
@@ -389,7 +421,7 @@ endif;
  */
 if (!function_exists('wp_mail_smtp_mail_from_name')) :
 function wp_mail_smtp_mail_from_name ($orig) {
-	
+
 	// Only filter if the from name is the default
 	if ($orig == 'WordPress') {
 		if (defined('WPMS_ON') && WPMS_ON) {
@@ -399,10 +431,10 @@ function wp_mail_smtp_mail_from_name ($orig) {
 		elseif ( get_option('mail_from_name') != "" && is_string(get_option('mail_from_name')) )
 			return get_option('mail_from_name');
 	}
-	
+
 	// If in doubt, return the original value
 	return $orig;
-	
+
 } // End of wp_mail_smtp_mail_from_name() function definition
 endif;
 
